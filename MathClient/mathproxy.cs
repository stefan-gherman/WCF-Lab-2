//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MathTypes
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathRequest", Namespace="http://example.org/math/types")]
    public partial class MathRequest : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double xField;
        
        private double yField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double x
        {
            get
            {
                return this.xField;
            }
            set
            {
                this.xField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double y
        {
            get
            {
                return this.yField;
            }
            set
            {
                this.yField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MathResponse", Namespace="http://example.org/math/types")]
    public partial class MathResponse : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double resultField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double result
        {
            get
            {
                return this.resultField;
            }
            set
            {
                this.resultField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://example.org/math/contracts", ConfigurationName="MathTypes.IMath")]
    public interface IMath
    {
        
        // CODEGEN: Generating message contract since the wrapper name (MathRequestMessage) of message MathRequestMessage does not match the default value (Add)
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Add", ReplyAction="http://example.org/math/contracts/IMath/AddResponse")]
        MathTypes.MathResponseMessage Add(MathTypes.MathRequestMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Add", ReplyAction="http://example.org/math/contracts/IMath/AddResponse")]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> AddAsync(MathTypes.MathRequestMessage request);
        
        // CODEGEN: Generating message contract since the wrapper name (MathRequestMessage) of message MathRequestMessage does not match the default value (Subtract)
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Subtract", ReplyAction="http://example.org/math/contracts/IMath/SubtractResponse")]
        MathTypes.MathResponseMessage Subtract(MathTypes.MathRequestMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Subtract", ReplyAction="http://example.org/math/contracts/IMath/SubtractResponse")]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> SubtractAsync(MathTypes.MathRequestMessage request);
        
        // CODEGEN: Generating message contract since the wrapper name (MathRequestMessage) of message MathRequestMessage does not match the default value (Multiply)
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Multiply", ReplyAction="http://example.org/math/contracts/IMath/MultiplyResponse")]
        MathTypes.MathResponseMessage Multiply(MathTypes.MathRequestMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Multiply", ReplyAction="http://example.org/math/contracts/IMath/MultiplyResponse")]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> MultiplyAsync(MathTypes.MathRequestMessage request);
        
        // CODEGEN: Generating message contract since the wrapper name (MathRequestMessage) of message MathRequestMessage does not match the default value (Divide)
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Divide", ReplyAction="http://example.org/math/contracts/IMath/DivideResponse")]
        MathTypes.MathResponseMessage Divide(MathTypes.MathRequestMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://example.org/math/contracts/IMath/Divide", ReplyAction="http://example.org/math/contracts/IMath/DivideResponse")]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> DivideAsync(MathTypes.MathRequestMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MathRequestMessage", WrapperNamespace="http://example.org/math/contracts", IsWrapped=true)]
    public partial class MathRequestMessage
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://example.org/math/contracts")]
        public int CustomHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://example.org/math/contracts", Order=0)]
        public MathTypes.MathRequest request;
        
        public MathRequestMessage()
        {
        }
        
        public MathRequestMessage(int CustomHeader, MathTypes.MathRequest request)
        {
            this.CustomHeader = CustomHeader;
            this.request = request;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MathResponseMessage", WrapperNamespace="http://example.org/math/contracts", IsWrapped=true)]
    public partial class MathResponseMessage
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://example.org/math/contracts", Order=0)]
        public MathTypes.MathResponse response;
        
        public MathResponseMessage()
        {
        }
        
        public MathResponseMessage(MathTypes.MathResponse response)
        {
            this.response = response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMathChannel : MathTypes.IMath, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MathClient : System.ServiceModel.ClientBase<MathTypes.IMath>, MathTypes.IMath
    {
        
        public MathClient()
        {
        }
        
        public MathClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public MathClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public MathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public MathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MathTypes.MathResponseMessage MathTypes.IMath.Add(MathTypes.MathRequestMessage request)
        {
            return base.Channel.Add(request);
        }
        
        public MathTypes.MathResponse Add(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            MathTypes.MathResponseMessage retVal = ((MathTypes.IMath)(this)).Add(inValue);
            return retVal.response;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> MathTypes.IMath.AddAsync(MathTypes.MathRequestMessage request)
        {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<MathTypes.MathResponseMessage> AddAsync(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            return ((MathTypes.IMath)(this)).AddAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MathTypes.MathResponseMessage MathTypes.IMath.Subtract(MathTypes.MathRequestMessage request)
        {
            return base.Channel.Subtract(request);
        }
        
        public MathTypes.MathResponse Subtract(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            MathTypes.MathResponseMessage retVal = ((MathTypes.IMath)(this)).Subtract(inValue);
            return retVal.response;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> MathTypes.IMath.SubtractAsync(MathTypes.MathRequestMessage request)
        {
            return base.Channel.SubtractAsync(request);
        }
        
        public System.Threading.Tasks.Task<MathTypes.MathResponseMessage> SubtractAsync(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            return ((MathTypes.IMath)(this)).SubtractAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MathTypes.MathResponseMessage MathTypes.IMath.Multiply(MathTypes.MathRequestMessage request)
        {
            return base.Channel.Multiply(request);
        }
        
        public MathTypes.MathResponse Multiply(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            MathTypes.MathResponseMessage retVal = ((MathTypes.IMath)(this)).Multiply(inValue);
            return retVal.response;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> MathTypes.IMath.MultiplyAsync(MathTypes.MathRequestMessage request)
        {
            return base.Channel.MultiplyAsync(request);
        }
        
        public System.Threading.Tasks.Task<MathTypes.MathResponseMessage> MultiplyAsync(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            return ((MathTypes.IMath)(this)).MultiplyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MathTypes.MathResponseMessage MathTypes.IMath.Divide(MathTypes.MathRequestMessage request)
        {
            return base.Channel.Divide(request);
        }
        
        public MathTypes.MathResponse Divide(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            MathTypes.MathResponseMessage retVal = ((MathTypes.IMath)(this)).Divide(inValue);
            return retVal.response;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MathTypes.MathResponseMessage> MathTypes.IMath.DivideAsync(MathTypes.MathRequestMessage request)
        {
            return base.Channel.DivideAsync(request);
        }
        
        public System.Threading.Tasks.Task<MathTypes.MathResponseMessage> DivideAsync(int CustomHeader, MathTypes.MathRequest request)
        {
            MathTypes.MathRequestMessage inValue = new MathTypes.MathRequestMessage();
            inValue.CustomHeader = CustomHeader;
            inValue.request = request;
            return ((MathTypes.IMath)(this)).DivideAsync(inValue);
        }
    }
}
